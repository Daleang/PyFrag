Simple Pyfrag Calculation
=========================

User could choose to install only part of the program to perform an activation strain analysis based on Activation Strain Model(ASM), which also known as the distortion/interaction model. The old PyFrag program (PyFrag 2008) can perform similar analysis using ADF as computational engine. This analysis now can be carried out on ADF, Gaussian, Orca and Turbomole, given a series of coordinate from the potential energy surface is available.

ADF
---

The basic pyfrag input for activation strain analysis for ADF is similar to the previous input example, except the coordinate section: ::

   JOBSUB

   #!/bin/bash
   #SBATCH -J NNC
   #SBATCH -N 1
   #SBATCH -t 24:00:00
   #SBATCH --ntasks-per-node=24
   #SBATCH --partition=normal
   #SBATCH --output=%job.stdout
   #SBATCH --error=%job.stdout
   export NSCM=24

   JOBSUB END

   PyFrag

   ircpath /home/x2sun/pyfragnew/test/molecule.xyz
   fragment  2
   fragment  1 3 4 5 6
   strain    0
   strain   -554.09
   bondlength 1 6  1.09

   PyFrag END

   ADF

   basis
   type TZ2P
   core Small
   end

   xc
   gga OPBE
   end

   relativistic SCALAR ZORA

   scf
   iterations 299
   converge 0.00001
   mixing 0.20
   end

   numericalquality verygood

   charge 0 0
   symmetry auto

   ADF END

The only difference compared with previous job input that you need to provide the path to a series of coordinate.
For more specification, just read the previous page. You can specify the filename of the LT or IRC or simple text output file you wish to analyze, both tape 21 and normal output files can be given. A tape 21 file should have a .t21 extension! Please make sure this is the case. You can specify two output files for an IRC t21 (backward and forward). A text file containing coordinates of an IRC calculation is also acceptable, for example, a text file generated by ADFmovie or Gaussian.

``ircpath path/filename.xyz``
``irct21 path/filename.t21``
``lt path/filename.t21``

To submit a job, create a directory and generate a input file and run the following command to submit a job:

``pyfrag job.in``


Gaussian
--------

The basic pyfrag input for activation strain analysis for Gaussian is as follow: ::

   INPUT_SPECS
   type = IRC
   output file = /home/x2sun/pyfragnew/test/Ethylene-forward.amv
   fa1_name = complex
   frag1 = H2
   1.H
   2.H
   end frag1
   frag2 = H2
   3.H
   4.H
   end frag2

   print bond 1 9 1.384
   print strain frag1  1000
   print strain frag2  2000

   END INPUT_SPECS


   "g09" <<eor


   %nprocs=16
   %mem=14000mb
   #OPBE/6-31G*

   Comments

   0 1
   END INPUT

The first section between INPUT_SPECS and END INPUT_SPECS is used to define fragment and provide coordinate path.
The second section between END INPUT_SPECS and END INPUT is used to do Gaussian parameter set up.
To submit a job, create a directory and generate a input file and run the following command to submit a job:

``pyfrag -x gaussan job.in``

Orca
----
The basic pyfrag input for activation strain analysis for Orca is as follow: ::

   INPUT_SPECS
   type = IRC
   output file = irc.amv
   fa1_name = pd_cc_ts
   frag1 = H2
   1.H
   2.H
   end frag1
   frag2 = H2
   3.H
   4.H
   end frag2

   print bond 1 3 1.00
   print strain frag1  100
   print strain frag2  200

   END INPUT_SPECS

   ! SP B3LYP 6-31G(d)

   * xyz 0 1
   END INPUT

The first section between INPUT_SPECS and END INPUT_SPECS is used to define fragment and provide coordinate path.
The second section between END INPUT_SPECS and END INPUT is used to do Orca parameter set up.
To submit a job, create a directory and generate a input file and run the following command to submit a job:

``pyfrag -x orca job.in``

Turbomole
---------
The basic pyfrag input for activation strain analysis for Turbomole is as follow: ::

   INPUT_SPECS
   type = IRC
   output file = irc.amv
   fa1_name = pd_cc_ts
   frag1 = pd
   1.H
   2.H
   end frag1
   frag2 = cc
   3.H
   4.H
   end frag2

   print bond 1 3 1.00
   print strain frag1  100
   print strain frag2  200

   END INPUT_SPECS
   %method
   ENRGY :: b-p/SVP [gen_stat=1,scf_msil=99,&
                     scf_grid=m4]
   %charge
   0
   %coord
   %end
   END INPUT

The first section between INPUT_SPECS and END INPUT_SPECS is used to define fragment and provide coordinate path.
The second section between END INPUT_SPECS and END INPUT is used to do Turbomole parameter set up.
To submit a job, create a directory and generate a input file and run the following command to submit a job:

``pyfrag -x turbomole job.in``
